-TASK-05:
import tkinter as tk
from tkinter import messagebox

# Dictionary to store contact information
contacts = {}

# Function to add a new contact
def add_contact():
    name = name_entry.get()
    phone = phone_entry.get()
    email = email_entry.get()
    address = address_entry.get()

    if name and phone:
        contacts[name] = {"Phone": phone, "Email": email, "Address": address}
        clear_entries()
        messagebox.showinfo("Success", "Contact added successfully!")
    else:
        messagebox.showerror("Error", "Name and Phone fields are required.")

# Function to view all contacts
def view_contacts():
    contact_list.delete(0, tk.END)
    for name, info in contacts.items():
        contact_list.insert(tk.END, f"{name}: {info['Phone']}")

# Function to search for a contact
def search_contact():
    keyword = search_entry.get()
    contact_list.delete(0, tk.END)
    for name, info in contacts.items():
        if keyword in name or keyword in info["Phone"]:
            contact_list.insert(tk.END, f"{name}: {info['Phone']}")

# Function to update a contact
def update_contact():
    name = name_entry.get()
    phone = phone_entry.get()
    email = email_entry.get()
    address = address_entry.get()

    if name in contacts:
        contacts[name] = {"Phone": phone, "Email": email, "Address": address}
        clear_entries()
        messagebox.showinfo("Success", "Contact updated successfully!")
    else:
        messagebox.showerror("Error", "Contact not found.")

# Function to delete a contact
def delete_contact():
    name = name_entry.get()
    if name in contacts:
        del contacts[name]
        clear_entries()
        messagebox.showinfo("Success", "Contact deleted successfully!")
    else:
        messagebox.showerror("Error", "Contact not found.")

# Function to clear input fields
def clear_entries():
    name_entry.delete(0, tk.END)
    phone_entry.delete(0, tk.END)
    email_entry.delete(0, tk.END)
    address_entry.delete(0, tk.END)
    search_entry.delete(0, tk.END)

# Create the main window
window = tk.Tk()
window.title("Contact Management")

# Create input fields and labels
name_label = tk.Label(window, text="Name:")
name_label.grid(row=0, column=0)
name_entry = tk.Entry(window)
name_entry.grid(row=0, column=1)

phone_label = tk.Label(window, text="Phone:")
phone_label.grid(row=1, column=0)
phone_entry = tk.Entry(window)
phone_entry.grid(row=1, column=1)

email_label = tk.Label(window, text="Email:")
email_label.grid(row=2, column=0)
email_entry = tk.Entry(window)
email_entry.grid(row=2, column=1)

address_label = tk.Label(window, text="Address:")
address_label.grid(row=3, column=0)
address_entry = tk.Entry(window)
address_entry.grid(row=3, column=1)

# Create buttons for various actions
add_button = tk.Button(window, text="Add Contact", command=add_contact)
add_button.grid(row=0, column=2)

view_button = tk.Button(window, text="View Contacts", command=view_contacts)
view_button.grid(row=1, column=2)

search_label = tk.Label(window, text="Search:")
search_label.grid(row=4, column=0)
search_entry = tk.Entry(window)
search_entry.grid(row=4, column=1)
search_button = tk.Button(window, text="Search", command=search_contact)
search_button.grid(row=4, column=2)

update_button = tk.Button(window, text="Update Contact", command=update_contact)
update_button.grid(row=5, column=0)

delete_button = tk.Button(window, text="Delete Contact", command=delete_contact)
delete_button.grid(row=5, column=1)

# Create a listbox to display contact names and phone numbers
contact_list = tk.Listbox(window)
contact_list.grid(row=6, columnspan=3)

# Start the Tkinter main loop
window.mainloop()
